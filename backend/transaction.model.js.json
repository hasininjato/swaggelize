{
    "sequelizeModel": "Transaction",
    "value": [
        {
            "field": "amount",
            "type": "field",
            "object": {
                "type": "DataTypes.DECIMAL",
                "allowNull": false,
                "unique": false,
                "validate": {
                    "notNull": {
                        "msg": "Amount is required"
                    },
                    "isDecimal": {
                        "msg": "Amount must be a valid decimal number"
                    },
                    "notEmpty": {
                        "msg": "Amount cannot be empty"
                    },
                    "min": {
                        "args": [
                            0.01
                        ],
                        "msg": "Amount must be greater than 0"
                    }
                }
            },
            "comment": {
                "methods": [
                    "item",
                    "list",
                    "put",
                    "post"
                ],
                "description": "Amount of the transaction"
            }
        },
        {
            "field": "description",
            "type": "field",
            "object": {
                "type": "DataTypes.STRING",
                "allowNull": false,
                "unique": false,
                "validate": {
                    "notNull": {
                        "msg": "Description is required"
                    },
                    "notEmpty": {
                        "msg": "Description cannot be empty"
                    }
                }
            },
            "comment": {
                "methods": [
                    "item",
                    "list",
                    "put",
                    "post"
                ],
                "description": "Description of the transaction"
            }
        },
        {
            "field": "date",
            "type": "field",
            "object": {
                "type": "DataTypes.DATE",
                "allowNull": false,
                "defaultValue": "DataTypes.NOW"
            },
            "comment": {
                "methods": [
                    "item",
                    "list"
                ],
                "description": ""
            }
        },
        {
            "type": "relation",
            "relation": "hasMany",
            "args": [
                "Transaction",
                {
                    "foreignKey": "userId"
                }
            ],
            "comment": {
                "methods": [],
                "description": ""
            }
        }
    ]
}